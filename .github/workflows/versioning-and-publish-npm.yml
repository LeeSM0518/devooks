name: Versioning Server And Publish NPM

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'develop'
          fetch-depth: 0

      - name: Determine Version Bump Type And Bump version using git tags
        id: set_tag
        run: |
          echo "Fetching the last commit message..."
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Last commit message: $LAST_COMMIT_MSG"

          BUMP_TYPE="patch"
          if echo "$LAST_COMMIT_MSG" | grep -qi "\[MAJOR\]"; then
            BUMP_TYPE="major"
          elif echo "$LAST_COMMIT_MSG" | grep -qi "\[MINOR\]"; then
            BUMP_TYPE="minor"
          fi
          echo "Bump type: $BUMP_TYPE"

          # Determine last tag
          LAST_TAG=$(git tag -l --sort=-v:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          if [ -z "$LAST_TAG" ]; then
            echo "No tags found. Using default version 0.0.0"
            LAST_TAG="0.0.0"
          fi
          echo "Last tag: $LAST_TAG"

          # Bump function
          bump_version() {
            IFS='.' read -r major minor patch <<< "$1"
            case "$2" in
              major)
                major=$((major + 1))
                minor=0
                patch=0
                ;;
              minor)
                minor=$((minor + 1))
                patch=0
                ;;
              patch)
                patch=$((patch + 1))
                ;;
              *)
                echo "Invalid bump type: $2"
                exit 1
                ;;
            esac
            echo "${major}.${minor}.${patch}"
          }

          NEW_TAG=$(bump_version "$LAST_TAG" "$BUMP_TYPE")
          echo "New tag: $NEW_TAG"

          git config user.name "LeeSM0518"
          git config user.email "nalsm98@naver.com"
          git tag "$NEW_TAG"

          # 출력 변수를 GitHub Actions에 전달 (GITHUB_OUTPUT)
          echo "tag=$NEW_TAG" >> $GITHUB_OUTPUT
      - name: Push Tag
        uses: ad-m/github-push-action@master
        with:
          branch: develop
          github_token: '${{ secrets.WORKFLOW_TOKEN }}'

  create_openapi:
    needs: versioning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Publish NPM
        run: |
          ./gradlew publishTypeNpm \
            -Ppassword=${{ secrets.NPMRC_PASSWORD }}
        env:
          # 만약 Gradle가 환경변수로 NPMRC_PASSWORD 접근할 수 있도록 지정
          NPMRC_PASSWORD: ${{ secrets.NPMRC_PASSWORD }}
